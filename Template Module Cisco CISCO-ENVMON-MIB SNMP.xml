<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Modules</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Module Cisco CISCO-ENVMON-MIB SNMP</template>
            <name>Template Module Cisco CISCO-ENVMON-MIB SNMP</name>
            <description>Template Cisco CISCO-ENVMON-MIB&#13;
&#13;
MIBs used:&#13;
CISCO-ENVMON-MIB&#13;
&#13;
Template tooling version used: 0.36</description>
            <groups>
                <group>
                    <name>Templates/Modules</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Fans</name>
                </application>
                <application>
                    <name>Power supply</name>
                </application>
                <application>
                    <name>Temperature</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>FAN Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SENSOR_INFO},1.3.6.1.4.1.9.9.13.1.4.1.2]</snmp_oid>
                    <key>fan.discovery</key>
                    <delay>1h</delay>
                    <description>The table of fan status maintained by the environmental monitor.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_INFO}: Fan status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.9.9.13.1.4.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.fan.status[ciscoEnvMonFanState.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: CISCO-ENVMON-MIB</description>
                            <applications>
                                <application>
                                    <name>Fans</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>CISCO-ENVMON-MIB::CiscoEnvMonState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:&quot;shutdown&quot;},eq)}=1</expression>
                                    <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the fan unit</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_WARN_STATUS:&quot;warning&quot;},eq)}=1 or {count(#1,{$FAN_WARN_STATUS:&quot;notFunctioning&quot;},eq)}=1</expression>
                                    <name>{#SENSOR_INFO}: Fan is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the fan unit</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#SENSOR_INFO}: Fan is in critical state</name>
                                            <expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.fan.status[ciscoEnvMonFanState.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.fan.status[ciscoEnvMonFanState.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;shutdown&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>PSU Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SENSOR_INFO},1.3.6.1.4.1.9.9.13.1.5.1.2]</snmp_oid>
                    <key>psu.discovery</key>
                    <delay>1h</delay>
                    <description>The table of power supply status maintained by the environmental monitor card.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_INFO}: Power supply status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.9.9.13.1.5.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.psu.status[ciscoEnvMonSupplyState.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: CISCO-ENVMON-MIB</description>
                            <applications>
                                <application>
                                    <name>Power supply</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>CISCO-ENVMON-MIB::CiscoEnvMonState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {count(#1,{$PSU_CRIT_STATUS:&quot;shutdown&quot;},eq)}=1</expression>
                                    <name>{#SENSOR_INFO}: Power supply is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the power supply unit for errors</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_WARN_STATUS:&quot;warning&quot;},eq)}=1 or {count(#1,{$PSU_WARN_STATUS:&quot;notFunctioning&quot;},eq)}=1</expression>
                                    <name>{#SENSOR_INFO}: Power supply is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the power supply unit for errors</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#SENSOR_INFO}: Power supply is in critical state</name>
                                            <expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.psu.status[ciscoEnvMonSupplyState.{#SNMPINDEX}].count(#1,{$PSU_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.psu.status[ciscoEnvMonSupplyState.{#SNMPINDEX}].count(#1,{$PSU_CRIT_STATUS:&quot;shutdown&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.9.9.13.1.3.1.2]</snmp_oid>
                    <key>temperature.discovery</key>
                    <delay>1h</delay>
                    <description>Discovery of ciscoEnvMonTemperatureTable (ciscoEnvMonTemperatureDescr), a table of ambient temperature status&#13;
maintained by the environmental monitor.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SNMPVALUE}: Temperature status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.9.9.13.1.3.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: CISCO-ENVMON-MIB&#13;
The current state of the test point being instrumented.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>CISCO-ENVMON-MIB::CiscoEnvMonState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>{#SNMPVALUE}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.9.9.13.1.3.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>°C</units>
                            <description>MIB: CISCO-ENVMON-MIB&#13;
The current measurement of the test point being instrumented.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;{#SNMPVALUE}&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;{#SNMPVALUE}&quot;}+3</recovery_expression>
                                    <name>{#SNMPVALUE}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;{#SNMPVALUE}&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}&#13;
or&#13;
{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}-3</recovery_expression>
                            <name>{#SNMPVALUE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_WARN:&quot;{#SNMPVALUE}&quot;}&#13;
or&#13;
{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}].last(0)}={$TEMP_WARN_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_WARN:&quot;{#SNMPVALUE}&quot;}-3</recovery_expression>
                            <name>{#SNMPVALUE}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;{#SNMPVALUE}&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                            <dependencies>
                                <dependency>
                                    <name>{#SNMPVALUE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}</name>
                                    <expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}&#13;
or&#13;
{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.status[ciscoEnvMonTemperatureState.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                                    <recovery_expression>{Template Module Cisco CISCO-ENVMON-MIB SNMP:sensor.temp.value[ciscoEnvMonTemperatureValue.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;{#SNMPVALUE}&quot;}-3</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;critical&quot;}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;shutdown&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$FAN_WARN_STATUS:&quot;notFunctioning&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$FAN_WARN_STATUS:&quot;warning&quot;}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$PSU_CRIT_STATUS:&quot;critical&quot;}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$PSU_CRIT_STATUS:&quot;shutdown&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$PSU_WARN_STATUS:&quot;notFunctioning&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$PSU_WARN_STATUS:&quot;warning&quot;}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT}</macro>
                    <value>60</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT:&quot;CPU&quot;}</macro>
                    <value>75</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_LOW}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_STATUS}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$TEMP_DISASTER_STATUS}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN:&quot;CPU&quot;}</macro>
                    <value>70</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN_STATUS}</macro>
                    <value>2</value>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>CISCO-ENVMON-MIB::CiscoEnvMonState</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>normal</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>warning</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>critical</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>shutdown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>notPresent</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>notFunctioning</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
