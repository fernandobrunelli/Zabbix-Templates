<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App Generic Java JMX</template>
            <name>Template App Generic Java JMX</name>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Classes</name>
                </application>
                <application>
                    <name>Compilation</name>
                </application>
                <application>
                    <name>Garbage collector</name>
                </application>
                <application>
                    <name>Memory</name>
                </application>
                <application>
                    <name>Memory pool</name>
                </application>
                <application>
                    <name>Operating system</name>
                </application>
                <application>
                    <name>Runtime</name>
                </application>
                <application>
                    <name>Threads</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>cl Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,LoadedClassCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Classes</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Total Loaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,TotalLoadedClassCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Classes</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>cl Unloaded Class Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=ClassLoading&quot;,UnloadedClassCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Classes</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>comp Name of the current JIT compiler</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,Name]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Compilation</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Client)}=1</expression>
                            <name>{HOST.NAME} uses suboptimal JIT compiler</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>comp Accumulated time spent in compilation</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Compilation&quot;,TotalCompilationTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Compilation</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ConcurrentMarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc Copy accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc MarkSweepCompact accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc ParNew accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS MarkSweep accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge number of collections per second</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>gc PS Scavenge accumulated time spent in collection</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionTime]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>Garbage collector</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Non-Heap Memory used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mem Object Pending Finalization Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Memory&quot;,ObjectPendingFinalizationCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Memory</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp CMS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Code Cache used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Old Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp PS Perm Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen committed</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen max</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>mp Tenured Gen used</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used]</key>
                    <history>1w</history>
                    <units>B</units>
                    <applications>
                        <application>
                            <name>Memory pool</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Max File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Operating system</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Open File Descriptor Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Operating system</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>os Process CPU Load</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,ProcessCpuLoad]</key>
                    <history>1w</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <applications>
                        <application>
                            <name>Operating system</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>100</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{last(0)}&gt;70</expression>
                            <name>70% os Process CPU Load on {HOST.NAME}</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Uptime</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,Uptime]</key>
                    <history>1w</history>
                    <units>uptime</units>
                    <applications>
                        <application>
                            <name>Runtime</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>MULTIPLIER</type>
                            <params>0.001</params>
                        </step>
                    </preprocessing>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{nodata(5m)}=1</expression>
                            <name>{HOST.NAME} is not reachable</name>
                            <priority>AVERAGE</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Name</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmName]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                    <triggers>
                        <trigger>
                            <expression>{str(Server)}&lt;&gt;1</expression>
                            <name>{HOST.NAME} runs suboptimal VM type</name>
                            <priority>INFO</priority>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>jvm Version</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Runtime&quot;,VmVersion]</key>
                    <delay>1h</delay>
                    <history>1w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>Runtime</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Daemon Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Threads</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Peak Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Threads</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Threads</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
                <item>
                    <name>th Total Started Thread Count</name>
                    <type>JMX</type>
                    <key>jmx[&quot;java.lang:type=Threading&quot;,TotalStartedThreadCount]</key>
                    <history>1w</history>
                    <applications>
                        <application>
                            <name>Threads</name>
                        </application>
                    </applications>
                    <jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint>
                </item>
            </items>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}*0.7)</expression>
            <name>70% mem Non-Heap Memory used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp CMS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Code Cache used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Old Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp PS Perm Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}*0.7)</expression>
            <name>70% mp Tenured Gen used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount].last(0)}&gt;({Template App Generic Java JMX:jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount].last(0)}*0.7)</expression>
            <name>70% os Opened File Descriptor Count used on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount].last(0)}&lt;{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc Concurrent Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount].last(0)}&lt;{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount].last(0)}</expression>
            <name>gc Mark Sweep Compact in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount].last(0)}&lt;{Template App Generic Java JMX:jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount].last(0)}</expression>
            <name>gc PS Mark Sweep in fire fighting mode on {HOST.NAME}</name>
            <priority>AVERAGE</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,HeapMemoryUsage.max].last(0)}</expression>
            <name>mem Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=Memory&quot;,NonHeapMemoryUsage.max].last(0)}</expression>
            <name>mem Non-Heap Memory fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp CMS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max].last(0)}</expression>
            <name>mp Code Cache fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Old Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp PS Perm Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
        <trigger>
            <expression>{Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed].last(0)}={Template App Generic Java JMX:jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max].last(0)}</expression>
            <name>mp Tenured Gen fully committed on {HOST.NAME}</name>
            <priority>WARNING</priority>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>Class Loader</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,TotalLoadedClassCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,UnloadedClassCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=ClassLoading&quot;,LoadedClassCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>File Descriptors</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,MaxFileDescriptorCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=OperatingSystem&quot;,OpenFileDescriptorCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Garbage Collector collections per second</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS Scavenge&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=ConcurrentMarkSweep&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=Copy&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <color>C8C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=MarkSweepCompact&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>4</sortorder>
                    <color>00C8C9</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=PS MarkSweep&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>5</sortorder>
                    <color>C800C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=GarbageCollector,name=ParNew&quot;,CollectionCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool CMS Old Gen</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Old Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool CMS Perm Gen</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=CMS Perm Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool Code Cache</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Code Cache&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool Perm Gen</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Perm Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool PS Old Gen</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Old Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool PS Perm Gen</name>
            <graph_items>
                <graph_item>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=PS Perm Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory Pool Tenured Gen</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.committed]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.max]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=MemoryPool,name=Tenured Gen&quot;,Usage.used]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Threads</name>
            <graph_items>
                <graph_item>
                    <color>C80000</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,PeakThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>00C800</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,DaemonThreadCount]</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>0000C8</color>
                    <item>
                        <host>Template App Generic Java JMX</host>
                        <key>jmx[&quot;java.lang:type=Threading&quot;,ThreadCount]</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
</zabbix_export>
