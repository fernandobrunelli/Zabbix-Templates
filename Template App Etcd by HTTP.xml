<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App Etcd by HTTP</template>
            <name>Template App Etcd by HTTP</name>
            <description>Get Etcd metrics by HTTP agent.&#13;
&#13;
Template tooling version used: 0.36</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Etcd</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Etcd: Cluster version</name>
                    <type>DEPENDENT</type>
                    <key>etcd.cluster.version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Version of the Etcd cluster.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.etcdcluster</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_version</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Etcd: Cluster version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Etcd version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: CPU</name>
                    <type>DEPENDENT</type>
                    <key>etcd.cpu.util</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Total user and system CPU time spent in seconds.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_cpu_seconds_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: DB size</name>
                    <type>DEPENDENT</type>
                    <key>etcd.db.size</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <description>Total size of the underlying database.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_db_total_size_in_bytes
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Deletes per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.delete.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of deletes seen by this member per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_delete_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Pending events</name>
                    <type>DEPENDENT</type>
                    <key>etcd.events.sent.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of pending events to be sent.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_pending_events_total
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Get node metrics</name>
                    <type>HTTP_AGENT</type>
                    <key>etcd.get_metrics</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$ETCD.USER}</username>
                    <password>{$ETCD.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <url>{$ETCD.SCHEME}://{HOST.CONN}:{$ETCD.PORT}/metrics</url>
                </item>
                <item>
                    <name>Etcd: Get version</name>
                    <type>HTTP_AGENT</type>
                    <key>etcd.get_version</key>
                    <history>0</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <url>{$ETCD.SCHEME}://{HOST.CONN}:{$ETCD.PORT}/version</url>
                </item>
                <item>
                    <name>Etcd: RPCs received per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.grpc.received.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of RPC stream messages received on the server.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>grpc_server_msg_received_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: RPCs sent per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.grpc.sent.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of gRPC stream messages sent by the server.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>grpc_server_msg_sent_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: RPCs started per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.grpc.started.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of RPCs started on the server.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>grpc_server_started_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Server has a leader</name>
                    <type>DEPENDENT</type>
                    <key>etcd.has.leader</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Whether or not a leader exists. 1 is existence, 0 is not.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Etcd leader</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_has_leader
</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Etcd: Member has no leader</name>
                            <priority>AVERAGE</priority>
                            <description>&quot;If a member does not have a leader, it is totally unavailable.&quot;</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Node health</name>
                    <type>HTTP_AGENT</type>
                    <key>etcd.health</key>
                    <history>7d</history>
                    <authtype>BASIC</authtype>
                    <username>{$ETCD.USER}</username>
                    <password>{$ETCD.PASSWORD}</password>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Etcd healthcheck</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.health</params>
                        </step>
                        <step>
                            <type>BOOL_TO_DECIMAL</type>
                            <params/>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <url>{$ETCD.SCHEME}://{HOST.CONN}:{$ETCD.PORT}/health</url>
                    <status_codes/>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Etcd: Node healthcheck failed</name>
                            <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                            <priority>AVERAGE</priority>
                            <description>https://etcd.io/docs/v3.4.0/op-guide/monitoring/#health-check</description>
                            <dependencies>
                                <dependency>
                                    <name>Etcd: Service is unavailable</name>
                                    <expression>{Template App Etcd by HTTP:net.tcp.service[&quot;{$ETCD.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ETCD.PORT}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: HTTP 4XX</name>
                    <type>DEPENDENT</type>
                    <key>etcd.http.requests.4xx.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>Number of handle failures of requests (non-watches), by method (GET/PUT etc.), and code 4XX.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_http_failed_total{code=~&quot;4.+&quot;}</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: HTTP 5XX</name>
                    <type>DEPENDENT</type>
                    <key>etcd.http.requests.5xx.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>Number of handle failures of requests (non-watches), by method (GET/PUT etc.), and code 5XX.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_http_failed_total{code=~&quot;5.+&quot;}</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$ETCD.HTTP.FAIL.MAX.WARN}</expression>
                            <name>Etcd: Too many HTTP requests failures (over {$ETCD.HTTP.FAIL.MAX.WARN} for 5m)'</name>
                            <priority>WARNING</priority>
                            <description>&quot;Too many reqvests failed on etcd instance with 5xx HTTP code&quot;</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: HTTP requests received</name>
                    <type>DEPENDENT</type>
                    <key>etcd.http.requests.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>Number of requests received into the system (successfully parsed and authd).</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_http_received_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Server is a leader</name>
                    <type>DEPENDENT</type>
                    <key>etcd.is.leader</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Whether or not this member is a leader. 1 if is, 0 otherwise.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Etcd leader</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_is_leader
</params>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{nodata(30m)}=1</expression>
                            <name>Etcd: Failed to fetch info data (or no data for 30m)</name>
                            <priority>WARNING</priority>
                            <description>Zabbix has not received data for items for the last 30 minutes</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>Etcd: Service is unavailable</name>
                                    <expression>{Template App Etcd by HTTP:net.tcp.service[&quot;{$ETCD.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ETCD.PORT}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Keys compacted per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.keys.compacted.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of DB keys compacted per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_db_compaction_keys_total
</params>
                            <error_handler>CUSTOM_VALUE</error_handler>
                            <error_handler_params>0</error_handler_params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Keys expired per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.keys.expired.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of expired keys per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_store_expires_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Keys total</name>
                    <type>DEPENDENT</type>
                    <key>etcd.keys.total</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>Total number of keys.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_keys_total
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Leader changes</name>
                    <type>DEPENDENT</type>
                    <key>etcd.leader.changes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The the number of leader changes the member has seen since its start.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_leader_changes_seen_total
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{delta(15m)}&gt;{$ETCD.LEADER.CHANGES.MAX.WARN}</expression>
                            <name>Etcd: Instance has seen too many leader changes (over {$ETCD.LEADER.CHANGES.MAX.WARN} for 15m)'</name>
                            <priority>WARNING</priority>
                            <description>Rapid leadership changes impact the performance of etcd significantly. It also signals that the leader is unstable, perhaps due to network connectivity issues or excessive load hitting the etcd cluster.</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Maximum open file descriptors</name>
                    <type>DEPENDENT</type>
                    <key>etcd.max.fds</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The Maximum number of open file descriptors.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_max_fds
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Client gRPC received bytes per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.network.grpc.received.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes received from grpc clients per second</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_network_client_grpc_received_bytes_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Client gRPC sent bytes per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.network.grpc.sent.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>Bps</units>
                    <description>The number of bytes sent from grpc clients per second</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_network_client_grpc_sent_bytes_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Open file descriptors</name>
                    <type>DEPENDENT</type>
                    <key>etcd.open.fds</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>Number of open file descriptors.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_open_fds
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Proposals applied per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.proposals.applied.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of consensus proposals applied.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_proposals_applied_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Proposals committed per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.proposals.committed.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of consensus proposals committed.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_proposals_committed_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Proposals failed per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.proposals.failed.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <description>The number of failed proposals seen.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_proposals_failed_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$ETCD.PROPOSAL.FAIL.MAX.WARN}</expression>
                            <name>Etcd: Too many proposal failures (over {$ETCD.PROPOSAL.FAIL.MAX.WARN} for 5m)'</name>
                            <priority>WARNING</priority>
                            <description>&quot;Normally related to two issues: temporary failures related to a leader election or &#13;
longer downtime caused by a loss of quorum in the cluster.&quot;</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Proposals pending</name>
                    <type>DEPENDENT</type>
                    <key>etcd.proposals.pending</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <description>The current number of pending proposals to commit.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_server_proposals_pending
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$ETCD.PROPOSAL.PENDING.MAX.WARN}</expression>
                            <name>Etcd: Too many proposals are queued to commit (over {$ETCD.PROPOSAL.PENDING.MAX.WARN} for 5m)'</name>
                            <priority>WARNING</priority>
                            <description>&quot;Rising pending proposals suggests there is a high client load or the member cannot commit proposals.&quot;</description>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: PUT per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.put.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of puts seen by this member per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_put_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Range per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.range.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of ranges seen by this member per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_range_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Reads per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.reads.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>Number of reads action by (get/getRecursive), local to this member.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_debugging_store_reads_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>//calculates total reads
var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Resident memory</name>
                    <type>DEPENDENT</type>
                    <key>etcd.res.bytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <description>Resident memory size in bytes.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_resident_memory_bytes
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Server version</name>
                    <type>DEPENDENT</type>
                    <key>etcd.server.version</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>Version of the Etcd server.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JSONPATH</type>
                            <params>$.etcdserver</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_version</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Etcd: Server version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>Etcd version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Transaction per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.txn.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>The number of transactions seen by this member per second.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>etcd_debugging_mvcc_range_total
</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Uptime</name>
                    <type>DEPENDENT</type>
                    <key>etcd.uptime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <description>Etcd server uptime.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_start_time_seconds
</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>//use boottime to calculate uptime
return (Math.floor(Date.now()/1000)-Number(value));</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;10m</expression>
                            <name>Etcd: has been restarted (uptime &lt; 10m)</name>
                            <priority>INFO</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Etcd: Virtual memory</name>
                    <type>DEPENDENT</type>
                    <key>etcd.virtual.bytes</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>B</units>
                    <description>Virtual memory size in bytes.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_PATTERN</type>
                            <params>process_virtual_memory_bytes
</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Writes per second</name>
                    <type>DEPENDENT</type>
                    <key>etcd.writes.rate</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>rps</units>
                    <description>Number of writes (e.g. set/compareAndDelete) seen by this member.</description>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_debugging_store_writes_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                        </step>
                        <step>
                            <type>CHANGE_PER_SECOND</type>
                            <params/>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                </item>
                <item>
                    <name>Etcd: Service's TCP port state</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[&quot;{$ETCD.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$ETCD.PORT}&quot;]</key>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>Etcd</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>Etcd: Service is unavailable</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>gRPC codes discovery</name>
                    <type>DEPENDENT</type>
                    <key>etcd.grpc_code.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#GRPC.CODE}</macro>
                                <value>{$ETCD.GRPC_CODE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#GRPC.CODE}</macro>
                                <value>{$ETCD.GRPC_CODE.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>Etcd: RPCs completed with code {#GRPC.CODE}</name>
                            <type>DEPENDENT</type>
                            <key>etcd.grpc.handled.rate[{#GRPC.CODE}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of RPCs completed on the server with grpc_code {#GRPC.CODE}</description>
                            <applications>
                                <application>
                                    <name>Etcd</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>PROMETHEUS_TO_JSON</type>
                                    <params>grpc_server_handled_total{grpc_method=&quot;{#GRPC.CODE}&quot;}</params>
                                </step>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>var valueArr = JSON.parse(value);
return valueArr.reduce(function(acc,obj){
   return acc + parseFloat(obj['value'])
},0);</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>etcd.get_metrics</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$ETCD.GRPC.ERRORS.MAX.WARN}</expression>
                                    <name>Etcd: Too many failed gRPC requests with code: {#GRPC.CODE} (over {$ETCD.GRPC.ERRORS.MAX.WARN} in 5m)</name>
                                    <discover>NO_DISCOVER</discover>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>grpc_server_handled_total</params>
                        </step>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>var data = JSON.parse(value),
 lookup = {},
 result =[];
for (var item, i = 0; item = data[i++];) {
 var code = item.labels.grpc_code;
 if (!(code in lookup)) {
  lookup[code] = 1;
  result.push({ &quot;{#GRPC.CODE}&quot;: code});
}
}
return JSON.stringify(result);</params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                    <overrides>
                        <override>
                            <name>trigger</name>
                            <step>1</step>
                            <filter>
                                <conditions>
                                    <condition>
                                        <macro>{#GRPC.CODE}</macro>
                                        <value>{$ETCD.GRPC_CODE.TRIGGER.MATCHES}</value>
                                        <formulaid>A</formulaid>
                                    </condition>
                                </conditions>
                            </filter>
                            <operations>
                                <operation>
                                    <operationobject>TRIGGER_PROTOTYPE</operationobject>
                                    <operator>LIKE</operator>
                                    <value>Too many failed gRPC requests</value>
                                    <status>ENABLED</status>
                                    <discover>DISCOVER</discover>
                                </operation>
                            </operations>
                        </override>
                    </overrides>
                </discovery_rule>
                <discovery_rule>
                    <name>Peers discovery</name>
                    <type>DEPENDENT</type>
                    <key>etcd.peer.discovery</key>
                    <delay>0</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>Etcd: Etcd peer {#ETCD.PEER}: Bytes received</name>
                            <type>DEPENDENT</type>
                            <key>etcd.bytes.received.rate[{#ETCD.PEER}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>Bps</units>
                            <description>The number of bytes received from peer with ID {#ETCD.PEER}</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Etcd peer {#ETCD.PEER}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>PROMETHEUS_PATTERN</type>
                                    <params>etcd_network_peer_received_bytes_total{From=&quot;{#ETCD.PEER}&quot;}
</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>etcd.get_metrics</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Etcd: Etcd peer {#ETCD.PEER}: Bytes sent</name>
                            <type>DEPENDENT</type>
                            <key>etcd.bytes.sent.rate[{#ETCD.PEER}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>Bps</units>
                            <description>The number of bytes sent to peer with ID {#ETCD.PEER}</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Etcd peer {#ETCD.PEER}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>PROMETHEUS_PATTERN</type>
                                    <params>etcd_network_peer_sent_bytes_total{To=&quot;{#ETCD.PEER}&quot;}
</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>etcd.get_metrics</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Etcd: Etcd peer {#ETCD.PEER}: Receive failures failures</name>
                            <type>DEPENDENT</type>
                            <key>etcd.received.fail.rate[{#ETCD.PEER}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of receive failures from the peer with ID {#ETCD.PEER}</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Etcd peer {#ETCD.PEER}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>PROMETHEUS_PATTERN</type>
                                    <params>etcd_network_peer_received_failures_total{To=&quot;{#ETCD.PEER}&quot;}
</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>etcd.get_metrics</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Etcd: Etcd peer {#ETCD.PEER}: Send failures</name>
                            <type>DEPENDENT</type>
                            <key>etcd.sent.fail.rate[{#ETCD.PEER}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>rps</units>
                            <description>The number of send failures from peer with ID {#ETCD.PEER}</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Etcd peer {#ETCD.PEER}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>PROMETHEUS_PATTERN</type>
                                    <params>etcd_network_peer_sent_failures_total{To=&quot;{#ETCD.PEER}&quot;}
</params>
                                    <error_handler>CUSTOM_VALUE</error_handler>
                                    <error_handler_params>0</error_handler_params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>etcd.get_metrics</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <master_item>
                        <key>etcd.get_metrics</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#ETCD.PEER}</lld_macro>
                            <path>$.labels.To</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                    <preprocessing>
                        <step>
                            <type>PROMETHEUS_TO_JSON</type>
                            <params>etcd_network_peer_sent_bytes_total</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$ETCD.GRPC.ERRORS.MAX.WARN}</macro>
                    <value>1</value>
                    <description>Maximum number of gRPC requests failures</description>
                </macro>
                <macro>
                    <macro>{$ETCD.GRPC_CODE.MATCHES}</macro>
                    <value>.*</value>
                    <description>Filter of discoverable gRPC codes https://github.com/grpc/grpc/blob/master/doc/statuscodes.md</description>
                </macro>
                <macro>
                    <macro>{$ETCD.GRPC_CODE.NOT_MATCHES}</macro>
                    <value>CHANGE_IF_NEEDED</value>
                    <description>Filter to exclude discovered gRPC codes https://github.com/grpc/grpc/blob/master/doc/statuscodes.md</description>
                </macro>
                <macro>
                    <macro>{$ETCD.GRPC_CODE.TRIGGER.MATCHES}</macro>
                    <value>Aborted|Unavailable</value>
                    <description>Filter of discoverable gRPC codes which will be create triggers</description>
                </macro>
                <macro>
                    <macro>{$ETCD.HTTP.FAIL.MAX.WARN}</macro>
                    <value>2</value>
                    <description>Maximum number of HTTP requests failures</description>
                </macro>
                <macro>
                    <macro>{$ETCD.LEADER.CHANGES.MAX.WARN}</macro>
                    <value>5</value>
                    <description>Maximum number of leader changes</description>
                </macro>
                <macro>
                    <macro>{$ETCD.OPEN.FDS.MAX.WARN}</macro>
                    <value>90</value>
                    <description>Maximum percentage of used file descriptors</description>
                </macro>
                <macro>
                    <macro>{$ETCD.PASSWORD}</macro>
                </macro>
                <macro>
                    <macro>{$ETCD.PORT}</macro>
                    <value>2379</value>
                    <description>The port of Etcd API endpoint</description>
                </macro>
                <macro>
                    <macro>{$ETCD.PROPOSAL.FAIL.MAX.WARN}</macro>
                    <value>2</value>
                    <description>Maximum number of proposal failures</description>
                </macro>
                <macro>
                    <macro>{$ETCD.PROPOSAL.PENDING.MAX.WARN}</macro>
                    <value>5</value>
                    <description>Maximum number of proposals in queue</description>
                </macro>
                <macro>
                    <macro>{$ETCD.SCHEME}</macro>
                    <value>http</value>
                    <description>Request scheme which may be http or https</description>
                </macro>
                <macro>
                    <macro>{$ETCD.USER}</macro>
                </macro>
            </macros>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template App Etcd by HTTP:etcd.open.fds.min(5m)}/{Template App Etcd by HTTP:etcd.max.fds.last()}*100&gt;{$ETCD.OPEN.FDS.MAX.WARN}</expression>
            <name>Etcd: Current number of open files is too high (over {$ETCD.OPEN.FDS.MAX.WARN}% for 5m)</name>
            <priority>WARNING</priority>
            <description>&quot;Heavy file descriptor usage (i.e., near the process’s file descriptor limit) indicates a potential file descriptor exhaustion issue. &#13;
If the file descriptors are exhausted, etcd may panic because it cannot create new WAL files.&quot;</description>
        </trigger>
    </triggers>
    <graphs>
        <graph>
            <name>Etcd: File descriptors</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.open.fds</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.max.fds</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: gRPC client traffic</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.network.grpc.received.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.network.grpc.sent.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: gRPC requests rate</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.grpc.received.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.grpc.sent.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.grpc.started.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: HTTP requests rate</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.http.requests.4xx.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.http.requests.5xx.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.http.requests.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: Memory usage</name>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.res.bytes</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.virtual.bytes</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: Proposals rate</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.proposals.failed.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.proposals.committed.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>2</sortorder>
                    <color>F63100</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.proposals.applied.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>3</sortorder>
                    <drawtype>BOLD_LINE</drawtype>
                    <color>A54F10</color>
                    <yaxisside>RIGHT</yaxisside>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.proposals.pending</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Etcd: Read/Write rate</name>
            <graph_items>
                <graph_item>
                    <color>1A7C11</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.reads.rate</key>
                    </item>
                </graph_item>
                <graph_item>
                    <sortorder>1</sortorder>
                    <color>2774A4</color>
                    <item>
                        <host>Template App Etcd by HTTP</host>
                        <key>etcd.writes.rate</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Etcd healthcheck</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Failed</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Ok</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Etcd leader</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>No</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Yes</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
