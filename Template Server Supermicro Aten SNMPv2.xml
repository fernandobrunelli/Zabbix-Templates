<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Server hardware</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Server Supermicro Aten SNMPv2</template>
            <name>Template Server Supermicro Aten SNMPv2</name>
            <description>Template Server Supermicro Aten&#13;
&#13;
MIBs used:&#13;
ATEN-IPMI-MIB&#13;
&#13;
Template tooling version used: 0.34</description>
            <templates>
                <template>
                    <name>Template Module Generic SNMPv2</name>
                </template>
            </templates>
            <groups>
                <group>
                    <name>Templates/Server hardware</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Fans</name>
                </application>
                <application>
                    <name>Temperature</name>
                </application>
            </applications>
            <discovery_rules>
                <discovery_rule>
                    <name>FAN Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.21317.1.3.1.2,{#SENSOR_DESCR},1.3.6.1.4.1.21317.1.3.1.13]</snmp_oid>
                    <key>fan.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SNMPVALUE}</macro>
                                <value>[1-9]+</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#SENSOR_DESCR}</macro>
                                <value>FAN.*</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Scanning ATEN-IPMI-MIB::sensorTable with filter: not connected FAN sensors (Value = 0)</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_DESCR}: Fan speed, %</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.21317.1.3.1.2.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.fan.speed.percentage[sensorReading.{#SNMPINDEX}]</key>
                            <units>%</units>
                            <description>MIB: ATEN-IPMI-MIB&#13;
A textual string containing information about the interface.&#13;
This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.</description>
                            <applications>
                                <application>
                                    <name>Fans</name>
                                </application>
                            </applications>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.21317.1.3.1.2,{#SENSOR_DESCR},1.3.6.1.4.1.21317.1.3.1.13]</snmp_oid>
                    <key>tempDescr.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SNMPVALUE}</macro>
                                <value>[1-9]+</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#SENSOR_DESCR}</macro>
                                <value>.*Temp.*</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Scanning ATEN-IPMI-MIB::sensorTable with filter: not connected temp sensors (Value = 0)</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_DESCR}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.21317.1.3.1.2.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[sensorReading.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>Â°C</units>
                            <description>MIB: ATEN-IPMI-MIB&#13;
A textual string containing information about the interface.&#13;
This string should include the name of the manufacturer, the product name and the version of the interface hardware/software.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_CRIT:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_CRIT:&quot;&quot;}-3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_WARN:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_WARN:&quot;&quot;}-3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#SENSOR_DESCR}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;&quot;}</name>
                                            <expression>{Template Server Supermicro Aten SNMPv2:sensor.temp.value[sensorReading.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;&quot;}</expression>
                                            <recovery_expression>{Template Server Supermicro Aten SNMPv2:sensor.temp.value[sensorReading.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;&quot;}-3</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;&quot;}+3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$TEMP_CRIT}</macro>
                    <value>60</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_LOW}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN}</macro>
                    <value>50</value>
                </macro>
            </macros>
        </template>
    </templates>
</zabbix_export>
