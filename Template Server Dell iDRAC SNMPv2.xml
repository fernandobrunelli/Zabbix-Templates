<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Server hardware</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Server Dell iDRAC SNMPv2</template>
            <name>Template Server Dell iDRAC SNMPv2</name>
            <description>Template Server iDRAC&#13;
&#13;
MIBs used:&#13;
IDRAC-MIB-SMIv2&#13;
&#13;
Template tooling version used: 0.34</description>
            <templates>
                <template>
                    <name>Template Module Generic SNMPv2</name>
                </template>
            </templates>
            <groups>
                <group>
                    <name>Templates/Server hardware</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Disk arrays</name>
                </application>
                <application>
                    <name>Fans</name>
                </application>
                <application>
                    <name>Inventory</name>
                </application>
                <application>
                    <name>Physical disks</name>
                </application>
                <application>
                    <name>Power supply</name>
                </application>
                <application>
                    <name>Temperature</name>
                </application>
                <application>
                    <name>Virtual disks</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Firmware version</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.674.10892.5.1.1.8.0</snmp_oid>
                    <key>system.hw.firmware</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: IDRAC-MIB-SMIv2&#13;
This attribute defines the firmware version of a remote access card.</description>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Firmware has changed</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>INFO</priority>
                            <description>Firmware version has changed. Ack to close</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Hardware model name</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.674.10892.5.1.3.12.0</snmp_oid>
                    <key>system.hw.model</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: IDRAC-MIB-SMIv2&#13;
This attribute defines the model name of the system.</description>
                    <inventory_link>MODEL</inventory_link>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                </item>
                <item>
                    <name>Hardware serial number</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.674.10892.5.1.3.2.0</snmp_oid>
                    <key>system.hw.serialnumber</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: IDRAC-MIB-SMIv2&#13;
This attribute defines the service tag of the system.</description>
                    <inventory_link>SERIALNO_A</inventory_link>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Device has been replaced (new serial number received)</name>
                            <priority>INFO</priority>
                            <description>Device serial number has changed. Ack to close</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Overall system health status</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.674.10892.5.2.1.0</snmp_oid>
                    <key>system.status[globalSystemStatus.0]</key>
                    <delay>30s</delay>
                    <history>2w</history>
                    <trends>0d</trends>
                    <description>MIB: IDRAC-MIB-SMIv2&#13;
This attribute defines the overall rollup status of all components in the system being monitored by the remote access card. Includes system, storage, IO devices, iDRAC, CPU, memory, etc.</description>
                    <applications>
                        <application>
                            <name>Status</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>IDRAC-MIB-SMIv2::ObjectStatusEnum</name>
                    </valuemap>
                    <triggers>
                        <trigger>
                            <expression>{count(#1,{$HEALTH_DISASTER_STATUS},eq)}=1</expression>
                            <name>System is in unrecoverable state!</name>
                            <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>Please check the device for faults</description>
                        </trigger>
                        <trigger>
                            <expression>{count(#1,{$HEALTH_CRIT_STATUS},eq)}=1</expression>
                            <name>System status is in critical state</name>
                            <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>Please check the device for errors</description>
                            <dependencies>
                                <dependency>
                                    <name>System is in unrecoverable state!</name>
                                    <expression>{Template Server Dell iDRAC SNMPv2:system.status[globalSystemStatus.0].count(#1,{$HEALTH_DISASTER_STATUS},eq)}=1</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                        <trigger>
                            <expression>{count(#1,{$HEALTH_WARN_STATUS},eq)}=1</expression>
                            <name>System status is in warning state</name>
                            <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>Please check the device for warnings</description>
                            <dependencies>
                                <dependency>
                                    <name>System is in unrecoverable state!</name>
                                    <expression>{Template Server Dell iDRAC SNMPv2:system.status[globalSystemStatus.0].count(#1,{$HEALTH_DISASTER_STATUS},eq)}=1</expression>
                                </dependency>
                                <dependency>
                                    <name>System status is in critical state</name>
                                    <expression>{Template Server Dell iDRAC SNMPv2:system.status[globalSystemStatus.0].count(#1,{$HEALTH_CRIT_STATUS},eq)}=1</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Operating system</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.674.10892.5.1.3.6.0</snmp_oid>
                    <key>system.sw.os[systemOSName]</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: IDRAC-MIB-SMIv2&#13;
This attribute defines the name of the operating system that the hostis running.</description>
                    <inventory_link>OS</inventory_link>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <recovery_mode>NONE</recovery_mode>
                            <name>Operating system description has changed</name>
                            <priority>INFO</priority>
                            <description>Operating system description has changed. Possible reasons that system has been updated or replaced. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Array Controller Cache Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#BATTERY_NUM},1.3.6.1.4.1.674.10892.5.5.1.20.130.15.1.1]</snmp_oid>
                    <key>array.cache.discovery</key>
                    <delay>1h</delay>
                    <description>IDRAC-MIB-SMIv2::batteryTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Battery {#BATTERY_NUM}: Disk array cache controller battery status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.15.1.4.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.diskarray.cache.battery.status[batteryState.{#SNMPINDEX}]</key>
                            <history>1w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
Current state of battery.&#13;
Possible values:&#13;
1: The current state could not be determined.&#13;
2: The battery is operating normally.&#13;
3: The battery has failed and needs to be replaced.&#13;
4: The battery temperature is high or charge level is depleting.&#13;
5: The battery is missing or not detected.&#13;
6: The battery is undergoing the re-charge phase.&#13;
7: The battery voltage or charge level is below the threshold.</description>
                            <applications>
                                <application>
                                    <name>Disk arrays</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::batteryState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_CACHE_BATTERY_CRIT_STATUS},eq)}=1</expression>
                                    <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is in critical state!</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the device for faults</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_CACHE_BATTERY_WARN_STATUS},eq)}=1</expression>
                                    <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the device for faults</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is in critical state!</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.cache.battery.status[batteryState.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_CACHE_BATTERY_CRIT_STATUS},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_CACHE_BATTERY_OK_STATUS},ne)}=1</expression>
                                    <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is not in optimal state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the device for faults</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is in critical state!</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.cache.battery.status[batteryState.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_CACHE_BATTERY_CRIT_STATUS},eq)}=1</expression>
                                        </dependency>
                                        <dependency>
                                            <name>Battery {#BATTERY_NUM}: Disk array cache controller battery is in warning state</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.cache.battery.status[batteryState.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_CACHE_BATTERY_WARN_STATUS},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>FAN Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.4.700.12.1.5,{#FAN_DESCR},1.3.6.1.4.1.674.10892.5.4.700.12.1.8,{#TYPE},1.3.6.1.4.1.674.10892.5.4.700.12.1.7]</snmp_oid>
                    <key>fan.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#TYPE}</macro>
                                <value>3</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>IDRAC-MIB-SMIv2::coolingDeviceTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#FAN_DESCR}: Fan speed</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.12.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.fan.speed[coolingDeviceReading.{#SNMPINDEX}]</key>
                            <units>rpm</units>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0012.0001.0006 This attribute defines the reading for a cooling device&#13;
of subtype other than coolingDeviceSubTypeIsDiscrete.  When the value&#13;
for coolingDeviceSubType is other than coolingDeviceSubTypeIsDiscrete, the&#13;
value returned for this attribute is the speed in RPM or the OFF/ON value&#13;
of the cooling device.  When the value for coolingDeviceSubType is&#13;
coolingDeviceSubTypeIsDiscrete, a value is not returned for this attribute.</description>
                            <applications>
                                <application>
                                    <name>Fans</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#FAN_DESCR}: Fan status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.12.1.5.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0012.0001.0005 This attribute defines the probe status of the cooling device.</description>
                            <applications>
                                <application>
                                    <name>Fans</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_CRIT_STATUS:&quot;criticalUpper&quot;},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:&quot;nonRecoverableUpper&quot;},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:&quot;criticalLower&quot;},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:&quot;nonRecoverableLower&quot;},eq)}=1 or {count(#1,{$FAN_CRIT_STATUS:&quot;failed&quot;},eq)}=1</expression>
                                    <name>{#FAN_DESCR}: Fan is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the fan unit</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_WARN_STATUS:&quot;nonCriticalUpper&quot;},eq)}=1 or {count(#1,{$FAN_WARN_STATUS:&quot;nonCriticalLower&quot;},eq)}=1</expression>
                                    <name>{#FAN_DESCR}: Fan is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the fan unit</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#FAN_DESCR}: Fan is in critical state</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;criticalUpper&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;nonRecoverableUpper&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;criticalLower&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;nonRecoverableLower&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:sensor.fan.status[coolingDeviceStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS:&quot;failed&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Array Controller Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1.38,{#CNTLR_NAME},1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1.79]</snmp_oid>
                    <key>physicaldisk.arr.discovery</key>
                    <delay>1h</delay>
                    <description>IDRAC-MIB-SMIv2::controllerTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#CNTLR_NAME}: Disk array controller model</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1.2.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.diskarray.model[controllerName.{#SNMPINDEX}]</key>
                            <delay>1d</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The controller's name as represented in Storage Management.</description>
                            <applications>
                                <application>
                                    <name>Disk arrays</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#CNTLR_NAME}: Disk array controller status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.1.1.38.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.diskarray.status[controllerComponentStatus.{#SNMPINDEX}]</key>
                            <history>1w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The status of the controller itself without the propagation of any contained component status.&#13;
Possible values:&#13;
1: Other&#13;
2: Unknown&#13;
3: OK&#13;
4: Non-critical&#13;
5: Critical&#13;
6: Non-recoverable</description>
                            <applications>
                                <application>
                                    <name>Disk arrays</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::ObjectStatusEnum</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_CRIT_STATUS:&quot;critical&quot;},eq)}=1</expression>
                                    <name>{#CNTLR_NAME}: Disk array controller is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>Please check the device for faults</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#CNTLR_NAME}: Disk array controller is in unrecoverable state!</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.status[controllerComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                    <name>{#CNTLR_NAME}: Disk array controller is in unrecoverable state!</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>DISASTER</priority>
                                    <description>Please check the device for faults</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_ARRAY_WARN_STATUS:&quot;nonCritical&quot;},eq)}=1</expression>
                                    <name>{#CNTLR_NAME}: Disk array controller is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the device for faults</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#CNTLR_NAME}: Disk array controller is in critical state</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.status[controllerComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_CRIT_STATUS:&quot;critical&quot;},eq)}=1</expression>
                                        </dependency>
                                        <dependency>
                                            <name>{#CNTLR_NAME}: Disk array controller is in unrecoverable state!</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.diskarray.status[controllerComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_ARRAY_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Physical Disk Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.1,{#DISK_NAME},1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.2]</snmp_oid>
                    <key>physicaldisk.discovery</key>
                    <delay>1h</delay>
                    <description>IDRAC-MIB-SMIv2::physicalDiskTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk media type</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.35.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.media_type[physicalDiskMediaType.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The media type of the physical disk. Possible Values:&#13;
1: The media type could not be determined.&#13;
2: Hard Disk Drive (HDD).&#13;
3: Solid State Drive (SSD).</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::physicalDiskMediaType</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk model name</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.model[physicalDiskProductID.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The model number of the physical disk.</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk part number</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.27.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.part_number[physicalDiskPartNumber.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The part number of the disk.</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk serial number</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.7.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.serialnumber[physicalDiskSerialNo.{#SNMPINDEX}]</key>
                            <delay>1d</delay>
                            <trends>0</trends>
                            <value_type>CHAR</value_type>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The physical disk's unique identification number from the manufacturer.</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                                    <name>{#DISK_NAME}: Disk has been replaced (new serial number received)</name>
                                    <priority>INFO</priority>
                                    <description>Disk serial number has changed. Ack to close</description>
                                    <manual_close>YES</manual_close>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Disk size</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.11.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.size[physicalDiskCapacityInMB.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <units>B</units>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The size of the physical disk in megabytes.</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1048576</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk S.M.A.R.T. status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.31.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.smart_status[physicalDiskSmartAlertIndication.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
Indicates whether the physical disk has received a predictive failure alert.</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::BooleanType</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_SMART_FAIL_STATUS},eq)}=1</expression>
                                    <name>{#DISK_NAME}: Physical disk S.M.A.R.T. failed</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>Disk probably requires replacement.</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#DISK_NAME}: Physical disk failed</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.physicaldisk.status[physicalDiskComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_FAIL_STATUS:&quot;critical&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:system.hw.physicaldisk.status[physicalDiskComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DISK_NAME}: Physical disk status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.130.4.1.24.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.physicaldisk.status[physicalDiskComponentStatus.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The status of the physical disk itself without the propagation of any contained component status.&#13;
Possible values:&#13;
1: Other&#13;
2: Unknown&#13;
3: OK&#13;
4: Non-critical&#13;
5: Critical&#13;
6: Non-recoverable</description>
                            <applications>
                                <application>
                                    <name>Physical disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::physicalDiskComponentStatus</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_FAIL_STATUS:&quot;critical&quot;},eq)}=1 or {count(#1,{$DISK_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                    <name>{#DISK_NAME}: Physical disk failed</name>
                                    <opdata>Current status: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>Please check physical disk for warnings or errors</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$DISK_WARN_STATUS:&quot;nonCritical&quot;},eq)}=1</expression>
                                    <name>{#DISK_NAME}: Physical disk is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check physical disk for warnings or errors</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#DISK_NAME}: Physical disk failed</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.physicaldisk.status[physicalDiskComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_FAIL_STATUS:&quot;critical&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:system.hw.physicaldisk.status[physicalDiskComponentStatus.{#SNMPINDEX}].count(#1,{$DISK_FAIL_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>PSU Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.4.600.12.1.5,{#PSU_DESCR},1.3.6.1.4.1.674.10892.5.4.600.12.1.8]</snmp_oid>
                    <key>psu.discovery</key>
                    <delay>1h</delay>
                    <description>IDRAC-MIB-SMIv2::powerSupplyTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#PSU_DESCR}: Power supply status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.600.12.1.5.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.psu.status[powerSupplyStatus.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0600.0012.0001.0005 This attribute defines the status of the power supply.</description>
                            <applications>
                                <application>
                                    <name>Power supply</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::ObjectStatusEnum</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {count(#1,{$PSU_CRIT_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                    <name>{#PSU_DESCR}: Power supply is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the power supply unit for errors</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_WARN_STATUS:&quot;nonCritical&quot;},eq)}=1</expression>
                                    <name>{#PSU_DESCR}: Power supply is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>Please check the power supply unit for errors</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#PSU_DESCR}: Power supply is in critical state</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.psu.status[powerSupplyStatus.{#SNMPINDEX}].count(#1,{$PSU_CRIT_STATUS:&quot;critical&quot;},eq)}=1 or {Template Server Dell iDRAC SNMPv2:sensor.psu.status[powerSupplyStatus.{#SNMPINDEX}].count(#1,{$PSU_CRIT_STATUS:&quot;nonRecoverable&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature Ambient Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.4.700.20.1.1,{#SENSOR_LOCALE},1.3.6.1.4.1.674.10892.5.4.700.20.1.8]</snmp_oid>
                    <key>temp.ambient.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#SENSOR_LOCALE}</macro>
                                <value>.*Inlet Temp.*</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Scanning table of Temperature Probe Table IDRAC-MIB-SMIv2::temperatureProbeTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_LOCALE}: Temperature status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.20.1.5.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0020.0001.0005 This attribute defines the probe status of the temperature probe.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>{#SENSOR_LOCALE}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.20.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>°C</units>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0020.0001.0006 This attribute defines the reading for a temperature probe of type other than temperatureProbeTypeIsDiscrete.  When the value for temperatureProbeType is other than temperatureProbeTypeIsDiscrete,the value returned for this attribute is the temperature that the probeis reading in tenths of degrees Centigrade. When the value for temperatureProbeType is temperatureProbeTypeIsDiscrete, a value is not returned for this attribute.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.1</params>
                                </step>
                            </preprocessing>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;Ambient&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;Ambient&quot;}+3</recovery_expression>
                                    <name>{#SENSOR_LOCALE}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;Ambient&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;Ambient&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;Ambient&quot;}-3</recovery_expression>
                            <name>{#SENSOR_LOCALE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;Ambient&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_WARN:&quot;Ambient&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}].last(0)}={$TEMP_WARN_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_WARN:&quot;Ambient&quot;}-3</recovery_expression>
                            <name>{#SENSOR_LOCALE}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;Ambient&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                            <dependencies>
                                <dependency>
                                    <name>{#SENSOR_LOCALE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;Ambient&quot;}</name>
                                    <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;Ambient&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.Ambient.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                                    <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.Ambient.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;Ambient&quot;}-3</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature CPU Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.4.700.20.1.1,{#SENSOR_LOCALE},1.3.6.1.4.1.674.10892.5.4.700.20.1.8]</snmp_oid>
                    <key>temp.cpu.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <conditions>
                            <condition>
                                <macro>{#SENSOR_LOCALE}</macro>
                                <value>.*CPU.*</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Scanning table of Temperature Probe Table IDRAC-MIB-SMIv2::temperatureProbeTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_LOCALE}: Temperature status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.20.1.5.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0020.0001.0005 This attribute defines the probe status of the temperature probe.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>{#SENSOR_LOCALE}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.4.700.20.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>°C</units>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
0700.0020.0001.0006 This attribute defines the reading for a temperature probe of type other than temperatureProbeTypeIsDiscrete.  When the value for temperatureProbeType is other than temperatureProbeTypeIsDiscrete,the value returned for this attribute is the temperature that the probeis reading in tenths of degrees Centigrade. When the value for temperatureProbeType is temperatureProbeTypeIsDiscrete, a value is not returned for this attribute.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.1</params>
                                </step>
                            </preprocessing>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;CPU&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;CPU&quot;}+3</recovery_expression>
                                    <name>{#SENSOR_LOCALE}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;CPU&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;CPU&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;CPU&quot;}-3</recovery_expression>
                            <name>{#SENSOR_LOCALE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;CPU&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>HIGH</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_WARN:&quot;CPU&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}].last(0)}={$TEMP_WARN_STATUS}</expression>
                            <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                            <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_WARN:&quot;CPU&quot;}-3</recovery_expression>
                            <name>{#SENSOR_LOCALE}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;CPU&quot;}</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>WARNING</priority>
                            <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                            <dependencies>
                                <dependency>
                                    <name>{#SENSOR_LOCALE}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;CPU&quot;}</name>
                                    <expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;CPU&quot;}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}].last(0)}={$TEMP_CRIT_STATUS}&#13;
or&#13;
{Template Server Dell iDRAC SNMPv2:sensor.temp.status[temperatureProbeStatus.CPU.{#SNMPINDEX}].last(0)}={$TEMP_DISASTER_STATUS}</expression>
                                    <recovery_expression>{Template Server Dell iDRAC SNMPv2:sensor.temp.value[temperatureProbeReading.CPU.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;CPU&quot;}-3</recovery_expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Virtual Disk Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.1,{#DISK_NAME},1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.2]</snmp_oid>
                    <key>virtualdisk.discovery</key>
                    <delay>1h</delay>
                    <description>IDRAC-MIB-SMIv2::virtualDiskTable</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Layout type</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.13.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.layout[virtualDiskLayout.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The virtual disk's RAID type.&#13;
Possible values:&#13;
1: Not one of the following&#13;
2: RAID-0&#13;
3: RAID-1&#13;
4: RAID-5&#13;
5: RAID-6&#13;
6: RAID-10&#13;
7: RAID-50&#13;
8: RAID-60&#13;
9: Concatenated RAID 1&#13;
10: Concatenated RAID 5</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::virtualDiskLayout</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Read policy</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.11.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.readpolicy[virtualDiskReadPolicy.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The read policy used by the controller for read operations on this virtual disk.&#13;
Possible values:&#13;
1: No Read Ahead.&#13;
2: Read Ahead.&#13;
3: Adaptive Read Ahead.</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Disk size</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.6.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.size[virtualDiskSizeInMB.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <units>B</units>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The size of the virtual disk in megabytes.</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>1048576</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Current state</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.30.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.state[virtualDiskOperationalState.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The state of the virtual disk when there are progressive operations ongoing.&#13;
Possible values:&#13;
1: There is no active operation running.&#13;
2: The virtual disk configuration has changed. The physical disks included in the virtual disk are being modified to support the new configuration.&#13;
3: A Consistency Check (CC) is being performed on the virtual disk.&#13;
4: The virtual disk is being initialized.&#13;
5: BackGround Initialization (BGI) is being performed on the virtual disk.</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::virtualDiskOperationalState</name>
                            </valuemap>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.4.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.status[virtualDiskState.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The current state of this virtual disk (which includes any member physical disks.)&#13;
Possible states:&#13;
1: The current state could not be determined.&#13;
2: The virtual disk is operating normally or optimally.&#13;
3: The virtual disk has encountered a failure. The data on disk is lost or is about to be lost.&#13;
4: The virtual disk encounterd a failure with one or all of the constituent redundant physical disks.&#13;
The data on the virtual disk might no longer be fault tolerant.</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::virtualDiskState</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$VDISK_CRIT_STATUS:&quot;failed&quot;},eq)}=1</expression>
                                    <name>Disk {#SNMPVALUE}({#DISK_NAME}): Virtual disk failed</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>Please check virtual disk for warnings or errors</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$VDISK_WARN_STATUS:&quot;degraded&quot;},eq)}=1</expression>
                                    <name>Disk {#SNMPVALUE}({#DISK_NAME}): Virtual disk is in warning state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check virtual disk for warnings or errors</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Virtual disk failed</name>
                                            <expression>{Template Server Dell iDRAC SNMPv2:system.hw.virtualdisk.status[virtualDiskState.{#SNMPINDEX}].count(#1,{$VDISK_CRIT_STATUS:&quot;failed&quot;},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk {#SNMPVALUE}({#DISK_NAME}): Write policy</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.674.10892.5.5.1.20.140.1.1.10.{#SNMPINDEX}</snmp_oid>
                            <key>system.hw.virtualdisk.writepolicy[virtualDiskWritePolicy.{#SNMPINDEX}]</key>
                            <delay>1h</delay>
                            <history>2w</history>
                            <description>MIB: IDRAC-MIB-SMIv2&#13;
The write policy used by the controller for write operations on this virtual disk.&#13;
Possible values:&#13;
1: Write Through.&#13;
2: Write Back.&#13;
3: Force Write Back.</description>
                            <applications>
                                <application>
                                    <name>Virtual disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>IDRAC-MIB-SMIv2::virtualDiskWritePolicy</name>
                            </valuemap>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$DISK_ARRAY_CACHE_BATTERY_CRIT_STATUS}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$DISK_ARRAY_CACHE_BATTERY_OK_STATUS}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$DISK_ARRAY_CACHE_BATTERY_WARN_STATUS}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$DISK_ARRAY_CRIT_STATUS:&quot;critical&quot;}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$DISK_ARRAY_FAIL_STATUS:&quot;nonRecoverable&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$DISK_ARRAY_WARN_STATUS:&quot;nonCritical&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$DISK_FAIL_STATUS:&quot;critical&quot;}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$DISK_FAIL_STATUS:&quot;nonRecoverable&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$DISK_SMART_FAIL_STATUS}</macro>
                    <value>1</value>
                </macro>
                <macro>
                    <macro>{$DISK_WARN_STATUS:&quot;nonCritical&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;criticalLower&quot;}</macro>
                    <value>8</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;criticalUpper&quot;}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;failed&quot;}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;nonRecoverableLower&quot;}</macro>
                    <value>9</value>
                </macro>
                <macro>
                    <macro>{$FAN_CRIT_STATUS:&quot;nonRecoverableUpper&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$FAN_WARN_STATUS:&quot;nonCriticalLower&quot;}</macro>
                    <value>7</value>
                </macro>
                <macro>
                    <macro>{$FAN_WARN_STATUS:&quot;nonCriticalUpper&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$HEALTH_CRIT_STATUS}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$HEALTH_DISASTER_STATUS}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$HEALTH_WARN_STATUS}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$PSU_CRIT_STATUS:&quot;critical&quot;}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$PSU_CRIT_STATUS:&quot;nonRecoverable&quot;}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$PSU_WARN_STATUS:&quot;nonCritical&quot;}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT}</macro>
                    <value>60</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT:&quot;Ambient&quot;}</macro>
                    <value>35</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT:&quot;CPU&quot;}</macro>
                    <value>75</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_LOW}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_STATUS}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TEMP_DISASTER_STATUS}</macro>
                    <value>6</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN:&quot;Ambient&quot;}</macro>
                    <value>30</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN:&quot;CPU&quot;}</macro>
                    <value>70</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN_STATUS}</macro>
                    <value>4</value>
                </macro>
                <macro>
                    <macro>{$VDISK_CRIT_STATUS:&quot;failed&quot;}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$VDISK_WARN_STATUS:&quot;degraded&quot;}</macro>
                    <value>4</value>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>IDRAC-MIB-SMIv2::batteryState</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Ready</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Failed</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>Degraded</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Missing</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>Charging</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>Below threshold</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::BooleanType</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>ok</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>failed</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::ObjectStatusEnum</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>ok</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>nonCritical</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>critical</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>nonRecoverable</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::physicalDiskComponentStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>ok</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>nonCritical</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>critical</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>nonRecoverable</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::physicalDiskMediaType</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>HDD</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>SSD</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::StatusProbeEnum</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>unknown</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>ok</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>nonCriticalUpper</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>criticalUpper</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>nonRecoverableUpper</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>nonCriticalLower</newvalue>
                </mapping>
                <mapping>
                    <value>8</value>
                    <newvalue>criticalLower</newvalue>
                </mapping>
                <mapping>
                    <value>9</value>
                    <newvalue>nonRecoverableLower</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>failed</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::virtualDiskLayout</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>RAID-0</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>RAID-1</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>RAID-5</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>RAID-6</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>RAID-10</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>RAID-50</newvalue>
                </mapping>
                <mapping>
                    <value>8</value>
                    <newvalue>RAID-60</newvalue>
                </mapping>
                <mapping>
                    <value>9</value>
                    <newvalue>Concatenated RAID 1</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Concatenated RAID 5</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::virtualDiskOperationalState</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Not applicable</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Reconstructing</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Resynching</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>Initializing</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Background init</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::virtualDiskState</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Online</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Failed</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>Degraded</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>IDRAC-MIB-SMIv2::virtualDiskWritePolicy</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>Write Through</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Write Back</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>Force Write Back</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
