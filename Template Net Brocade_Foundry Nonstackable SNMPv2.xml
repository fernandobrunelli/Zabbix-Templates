<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Network devices</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Net Brocade_Foundry Nonstackable SNMPv2</template>
            <name>Template Net Brocade_Foundry Nonstackable SNMPv2</name>
            <description>Template Net Brocade_Foundry Nonstackable&#13;
&#13;
MIBs used:&#13;
FOUNDRY-SN-AGENT-MIB&#13;
&#13;
Template tooling version used: 0.34</description>
            <templates>
                <template>
                    <name>Template Module Brocade_Foundry Performance SNMPv2</name>
                </template>
                <template>
                    <name>Template Module Generic SNMPv2</name>
                </template>
                <template>
                    <name>Template Module Interfaces SNMPv2</name>
                </template>
            </templates>
            <groups>
                <group>
                    <name>Templates/Network devices</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Fans</name>
                </application>
                <application>
                    <name>Inventory</name>
                </application>
                <application>
                    <name>Power supply</name>
                </application>
                <application>
                    <name>Temperature</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Firmware version</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.1991.1.1.2.1.11.0</snmp_oid>
                    <key>system.hw.firmware</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: FOUNDRY-SN-AGENT-MIB&#13;
The version of the running software in the form'major.minor.maintenance[letters]'</description>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Firmware has changed</name>
                            <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                            <priority>INFO</priority>
                            <description>Firmware version has changed. Ack to close</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>Hardware serial number</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>1.3.6.1.4.1.1991.1.1.1.1.2.0</snmp_oid>
                    <key>system.hw.serialnumber</key>
                    <delay>1h</delay>
                    <history>2w</history>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <description>MIB: FOUNDRY-SN-AGENT-MIB</description>
                    <inventory_link>SERIALNO_A</inventory_link>
                    <applications>
                        <application>
                            <name>Inventory</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>Device has been replaced (new serial number received)</name>
                            <priority>INFO</priority>
                            <description>Device serial number has changed. Ack to close</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>FAN Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#FAN_INDEX},1.3.6.1.4.1.1991.1.1.1.3.1.1.1]</snmp_oid>
                    <key>fan.discovery</key>
                    <delay>1h</delay>
                    <description>snChasFanTable: A table of each fan information. Only installed fan appears in a table row.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Fan {#FAN_INDEX}: Fan status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.1991.1.1.1.3.1.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.fan.status[snChasFanOperStatus.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: FOUNDRY-SN-AGENT-MIB</description>
                            <applications>
                                <application>
                                    <name>Fans</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                                    <name>Fan {#FAN_INDEX}: Fan is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the fan unit</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$FAN_OK_STATUS},ne)}=1</expression>
                                    <name>Fan {#FAN_INDEX}: Fan is not in normal state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>INFO</priority>
                                    <description>Please check the fan unit</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Fan {#FAN_INDEX}: Fan is in critical state</name>
                                            <expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.fan.status[snChasFanOperStatus.{#SNMPINDEX}].count(#1,{$FAN_CRIT_STATUS},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>PSU Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#PSU_INDEX},1.3.6.1.4.1.1991.1.1.1.2.1.1.1]</snmp_oid>
                    <key>psu.discovery</key>
                    <delay>1h</delay>
                    <description>snChasPwrSupplyTable: A table of each power supply information. Only installed power supply appears in a table row.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>PSU {#PSU_INDEX}: Power supply status</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.1991.1.1.1.2.1.1.3.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.psu.status[snChasPwrSupplyOperStatus.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <history>2w</history>
                            <trends>0d</trends>
                            <description>MIB: FOUNDRY-SN-AGENT-MIB</description>
                            <applications>
                                <application>
                                    <name>Power supply</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus</name>
                            </valuemap>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_CRIT_STATUS},eq)}=1</expression>
                                    <name>PSU {#PSU_INDEX}: Power supply is in critical state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                    <description>Please check the power supply unit for errors</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{count(#1,{$PSU_OK_STATUS},ne)}=1</expression>
                                    <name>PSU {#PSU_INDEX}: Power supply is not in normal state</name>
                                    <opdata>Current state: {ITEM.LASTVALUE1}</opdata>
                                    <priority>INFO</priority>
                                    <description>Please check the power supply unit for errors</description>
                                    <dependencies>
                                        <dependency>
                                            <name>PSU {#PSU_INDEX}: Power supply is in critical state</name>
                                            <expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.psu.status[snChasPwrSupplyOperStatus.{#SNMPINDEX}].count(#1,{$PSU_CRIT_STATUS},eq)}=1</expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature Discovery Chassis</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SNMPVALUE},1.3.6.1.4.1.1991.1.1.1.1.18]</snmp_oid>
                    <key>temp.chassis.discovery</key>
                    <delay>1h</delay>
                    <description>Since temperature of the chassis is not available on all Brocade/Foundry hardware, this LLD is here to avoid unsupported items.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Chassis #{#SNMPINDEX}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.1991.1.1.1.1.18.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[snChasActualTemperature.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>°C</units>
                            <description>MIB: FOUNDRY-SN-AGENT-MIB&#13;
Temperature of the chassis. Each unit is 0.5 degrees Celcius.&#13;
Only management module built with temperature sensor hardware is applicable.&#13;
For those non-applicable management module, it returns no-such-name.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.5</params>
                                </step>
                            </preprocessing>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_CRIT:&quot;Chassis&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_CRIT:&quot;Chassis&quot;}-3</recovery_expression>
                                    <name>Chassis #{#SNMPINDEX}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;Chassis&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_WARN:&quot;Chassis&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_WARN:&quot;Chassis&quot;}-3</recovery_expression>
                                    <name>Chassis #{#SNMPINDEX}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;Chassis&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                    <dependencies>
                                        <dependency>
                                            <name>Chassis #{#SNMPINDEX}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;Chassis&quot;}</name>
                                            <expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.temp.value[snChasActualTemperature.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;Chassis&quot;}</expression>
                                            <recovery_expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.temp.value[snChasActualTemperature.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;Chassis&quot;}-3</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;Chassis&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;Chassis&quot;}+3</recovery_expression>
                                    <name>Chassis #{#SNMPINDEX}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;Chassis&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Temperature Discovery</name>
                    <type>SNMP_AGENT</type>
                    <snmp_oid>discovery[{#SENSOR_DESCR},1.3.6.1.4.1.1991.1.1.2.13.1.1.3]</snmp_oid>
                    <key>temp.discovery</key>
                    <delay>1h</delay>
                    <description>snAgentTempTable:Table to list temperatures of the modules in the device. This table is applicable to only those modules with temperature sensors.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#SENSOR_DESCR}: Temperature</name>
                            <type>SNMP_AGENT</type>
                            <snmp_oid>1.3.6.1.4.1.1991.1.1.2.13.1.1.4.{#SNMPINDEX}</snmp_oid>
                            <key>sensor.temp.value[snAgentTempValue.{#SNMPINDEX}]</key>
                            <delay>3m</delay>
                            <value_type>FLOAT</value_type>
                            <units>°C</units>
                            <description>MIB: FOUNDRY-SN-AGENT-MIB&#13;
Temperature of the sensor represented by this row. Each unit is 0.5 degrees Celsius.</description>
                            <applications>
                                <application>
                                    <name>Temperature</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.5</params>
                                </step>
                            </preprocessing>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_CRIT:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_CRIT:&quot;&quot;}-3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>HIGH</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&gt;{$TEMP_WARN:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{max(5m)}&lt;{$TEMP_WARN:&quot;&quot;}-3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is above warning threshold: &gt;{$TEMP_WARN:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>WARNING</priority>
                                    <description>This trigger uses temperature sensor values as well as temperature sensor status if available</description>
                                    <dependencies>
                                        <dependency>
                                            <name>{#SENSOR_DESCR}: Temperature is above critical threshold: &gt;{$TEMP_CRIT:&quot;&quot;}</name>
                                            <expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.temp.value[snAgentTempValue.{#SNMPINDEX}].avg(5m)}&gt;{$TEMP_CRIT:&quot;&quot;}</expression>
                                            <recovery_expression>{Template Net Brocade_Foundry Nonstackable SNMPv2:sensor.temp.value[snAgentTempValue.{#SNMPINDEX}].max(5m)}&lt;{$TEMP_CRIT:&quot;&quot;}-3</recovery_expression>
                                        </dependency>
                                    </dependencies>
                                </trigger_prototype>
                                <trigger_prototype>
                                    <expression>{avg(5m)}&lt;{$TEMP_CRIT_LOW:&quot;&quot;}</expression>
                                    <recovery_mode>RECOVERY_EXPRESSION</recovery_mode>
                                    <recovery_expression>{min(5m)}&gt;{$TEMP_CRIT_LOW:&quot;&quot;}+3</recovery_expression>
                                    <name>{#SENSOR_DESCR}: Temperature is too low: &lt;{$TEMP_CRIT_LOW:&quot;&quot;}</name>
                                    <opdata>Current value: {ITEM.LASTVALUE1}</opdata>
                                    <priority>AVERAGE</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$FAN_CRIT_STATUS}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$FAN_OK_STATUS}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$PSU_CRIT_STATUS}</macro>
                    <value>3</value>
                </macro>
                <macro>
                    <macro>{$PSU_OK_STATUS}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT}</macro>
                    <value>75</value>
                </macro>
                <macro>
                    <macro>{$TEMP_CRIT_LOW}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$TEMP_WARN}</macro>
                    <value>65</value>
                </macro>
            </macros>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>normal</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus</name>
            <mappings>
                <mapping>
                    <value>1</value>
                    <newvalue>other</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>normal</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
