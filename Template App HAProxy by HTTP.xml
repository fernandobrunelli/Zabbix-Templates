<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <groups>
        <group>
            <name>Templates/Applications</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template App HAProxy by HTTP</template>
            <name>Template App HAProxy by HTTP</name>
            <description>Get metrics from status page using HTTP agent&#13;
https://www.haproxy.com/blog/exploring-the-haproxy-stats-page/.&#13;
Example configuration of HAProxy:        &#13;
  frontend stats&#13;
      bind *:8404&#13;
      stats enable&#13;
      stats uri /stats&#13;
      stats refresh 10s&#13;
      #stats auth Username:Password  # Authentication credentials&#13;
&#13;
&#13;
You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/393527-discussion-thread-for-official-zabbix-template-haproxy&#13;
&#13;
Template tooling version used: 0.35</description>
            <groups>
                <group>
                    <name>Templates/Applications</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>HAProxy</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>HAProxy: Get stats</name>
                    <type>HTTP_AGENT</type>
                    <key>haproxy.get</key>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$HAPROXY.USERNAME}</username>
                    <password>{$HAPROXY.PASSWORD}</password>
                    <description>HAProxy Statistics Report in CSV format</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>REGEX</type>
                            <params># ([\s\S]*)\n
\1</params>
                        </step>
                        <step>
                            <type>CSV_TO_JSON</type>
                            <params>

1</params>
                        </step>
                    </preprocessing>
                    <url>{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv</url>
                </item>
                <item>
                    <name>HAProxy: Get stats page</name>
                    <type>HTTP_AGENT</type>
                    <key>haproxy.get_html</key>
                    <history>1h</history>
                    <trends>0</trends>
                    <value_type>TEXT</value_type>
                    <authtype>BASIC</authtype>
                    <username>{$HAPROXY.USERNAME}</username>
                    <password>{$HAPROXY.PASSWORD}</password>
                    <description>HAProxy Statistics Report HTML</description>
                    <applications>
                        <application>
                            <name>Zabbix raw items</name>
                        </application>
                    </applications>
                    <url>{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH}</url>
                </item>
                <item>
                    <name>HAProxy: Uptime</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.uptime</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>HAProxy</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>try {
    var t = value.match(/(\d+)d (\d+)h(\d+)m(\d+)s/);
    return t[1] * 86400 + t[2] * 3600 + t[3] * 60 + t[4] * 1;
}
catch (error) {
    throw &quot;HAProxy uptime is not found : &quot; + error;
}</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>haproxy.get_html</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{last()}&lt;10m</expression>
                            <name>HAProxy: has been restarted (uptime &lt; 10m)</name>
                            <priority>INFO</priority>
                            <description>Uptime is less than 10 minutes</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>HAProxy: Version</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.version</key>
                    <delay>0</delay>
                    <trends>0</trends>
                    <value_type>CHAR</value_type>
                    <applications>
                        <application>
                            <name>HAProxy</name>
                        </application>
                    </applications>
                    <preprocessing>
                        <step>
                            <type>REGEX</type>
                            <params>HAProxy version ([^,]*),
\1</params>
                            <error_handler>CUSTOM_ERROR</error_handler>
                            <error_handler_params>HAProxy version is not found</error_handler_params>
                        </step>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1d</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>haproxy.get_html</key>
                    </master_item>
                    <triggers>
                        <trigger>
                            <expression>{diff()}=1 and {strlen()}&gt;0</expression>
                            <name>HAProxy: Version has changed (new version: {ITEM.VALUE})</name>
                            <priority>INFO</priority>
                            <description>HAProxy version has changed. Ack to close.</description>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>HAProxy: Service response time</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service.perf[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>s</units>
                    <applications>
                        <application>
                            <name>HAProxy</name>
                        </application>
                    </applications>
                    <triggers>
                        <trigger>
                            <expression>{min(5m)}&gt;{$HAPROXY.RESPONSE_TIME.MAX.WARN}</expression>
                            <name>HAProxy: Service response time is too high (over {$HAPROXY.RESPONSE_TIME.MAX.WARN} for 5m)</name>
                            <priority>WARNING</priority>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>HAProxy: Service is down</name>
                                    <expression>{Template App HAProxy by HTTP:net.tcp.service[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;].last()}=0</expression>
                                </dependency>
                            </dependencies>
                        </trigger>
                    </triggers>
                </item>
                <item>
                    <name>HAProxy: Service status</name>
                    <type>SIMPLE</type>
                    <key>net.tcp.service[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;]</key>
                    <history>7d</history>
                    <applications>
                        <application>
                            <name>HAProxy</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Service state</name>
                    </valuemap>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>10m</params>
                        </step>
                    </preprocessing>
                    <triggers>
                        <trigger>
                            <expression>{last()}=0</expression>
                            <name>HAProxy: Service is down</name>
                            <priority>AVERAGE</priority>
                            <manual_close>YES</manual_close>
                        </trigger>
                    </triggers>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>BACKEND discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.backend.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>BACKEND</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>http</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery backends</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Responses denied per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.dresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Responses denied due to security concerns (ACL-restricted).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Errors connection per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.econ.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests that encountered an error attempting to connect to a backend server.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Response errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.eresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests whose responses yielded an error</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_ERESP.MAX.WARN}</expression>
                                    <name>HAProxy backend {#PXNAME}: Number of responses with error is more than {$HAPROXY.BACK_ERESP.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests on backend, whose responses yielded an error, is more than {$HAPROXY.BACK_ERESP.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Unassigned requests</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.qcur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Current number of requests unassigned in queue.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_QCUR.MAX.WARN}</expression>
                                    <name>HAProxy backend {#PXNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Current number of requests on backend unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Time in queue</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.qtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average time spent in queue (in ms) for the last 1,024 requests</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_QTIME.MAX.WARN}</expression>
                                    <name>HAProxy backend {#PXNAME}: Average time spent in queue is more than {$HAPROXY.BACK_QTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_QTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Responses time</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.rtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average backend response time (in ms) for the last 1,024 requests</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_RTIME.MAX.WARN}</expression>
                                    <name>HAProxy backend {#PXNAME}: Average response time is more than {$HAPROXY.BACK_RTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average backend response time (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_RTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.status[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Service state</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{max(#5)}=0</expression>
                                    <name>HAProxy backend {#PXNAME}: Server is DOWN</name>
                                    <priority>AVERAGE</priority>
                                    <description>Backend is not available.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Redispatched requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a request was redispatched to a different backend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Backend {#PXNAME}: Retried connections per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a connection was retried.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: Backend {#PXNAME} Redispatched requests and retried connections per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.backend.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.backend.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>TCP BACKEND discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.backend_tcp.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>BACKEND</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>tcp</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery TCP backends</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Responses denied per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.dresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Responses denied due to security concerns (ACL-restricted).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Errors connection per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.econ.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests that encountered an error attempting to connect to a backend server.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Response errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.eresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests whose responses yielded an error</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_ERESP.MAX.WARN}</expression>
                                    <name>HAProxy TCP Backend {#PXNAME}: Number of responses with error is more than {$HAPROXY.BACK_ERESP.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests on backend, whose responses yielded an error, is more than {$HAPROXY.BACK_ERESP.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Unassigned requests</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.qcur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Current number of requests unassigned in queue.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_QCUR.MAX.WARN}</expression>
                                    <name>HAProxy TCP Backend {#PXNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Current number of requests on backend unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Time in queue</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.qtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average time spent in queue (in ms) for the last 1,024 requests</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_QTIME.MAX.WARN}</expression>
                                    <name>HAProxy TCP Backend {#PXNAME}: Average time spent in queue is more than {$HAPROXY.BACK_QTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_QTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Responses time</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.rtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average backend response time (in ms) for the last 1,024 requests</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.BACK_RTIME.MAX.WARN}</expression>
                                    <name>HAProxy TCP Backend {#PXNAME}: Average response time is more than {$HAPROXY.BACK_RTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average backend response time (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_RTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.status[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Service state</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{max(#5)}=0</expression>
                                    <name>HAProxy TCP Backend {#PXNAME}: Server is DOWN</name>
                                    <priority>AVERAGE</priority>
                                    <description>Backend is not available.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Redispatched requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a request was redispatched to a different backend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Backend {#PXNAME}: Retried connections per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.backend_tcp.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a connection was retried.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Backend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: TCP Backend {#PXNAME} Redispatched requests and retried connections per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.backend_tcp.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.backend_tcp.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>FRONTEND discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.frontend.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>FRONTEND</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>http</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery frontends</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Incoming traffic</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.bin[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <description>Number of bits received by the frontend</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bin.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Outgoing traffic</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.bout[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <description>Number of bits sent by the frontend</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bout.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Denied requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.dreq.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Requests denied due to security concerns (ACL-restricted) per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dreq.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_DREQ.MAX.WARN}</expression>
                                    <name>HAProxy frontend {#PXNAME}: Number of requests denied is more than {$HAPROXY.FRONT_DREQ.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests denied due to security concerns (ACL-restricted) is more than {$HAPROXY.FRONT_DREQ.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Request errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.ereq.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of request errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].ereq.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_EREQ.MAX.WARN}</expression>
                                    <name>HAProxy frontend {#PXNAME}: Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Number of responses with codes 1xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.hrsp_1xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of informational HTTP responses per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_1xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Number of responses with codes 2xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.hrsp_2xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of successful HTTP responses per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_2xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Number of responses with codes 3xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.hrsp_3xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of HTTP redirections per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_3xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Number of responses with codes 4xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.hrsp_4xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of HTTP client errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_4xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Number of responses with codes 5xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.hrsp_5xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of HTTP server errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_5xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Sessions rate</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of sessions created per second</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rate.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Requests rate</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.req_rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>HTTP requests per second</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].req_rate.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Established sessions</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.scur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The current number of established sessions.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].scur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Session limits</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend.slim[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The most simultaneous sessions that are allowed, as defined by the maxconn setting in the frontend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].slim.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy Frontend {#PXNAME}: Session utilization</name>
                            <type>CALCULATED</type>
                            <key>haproxy.frontend.sutil[{#PXNAME}:{#SVNAME}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <params>last(haproxy.frontend.scur[{#PXNAME}:{#SVNAME}]) / last(haproxy.frontend.slim[{#PXNAME}:{#SVNAME}]) * 100</params>
                            <description>Percentage of sessions used (scur / slim * 100).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_SUTIL.MAX.WARN}</expression>
                                    <name>HAProxy frontend {#PXNAME}: Session utilization is more than {$HAPROXY.FRONT_SUTIL.MAX.WARN}% for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Alerting on this metric is essential to ensure your server has sufficient capacity to handle all concurrent sessions. Unlike requests, upon reaching the session limit HAProxy will deny additional clients until resource consumption drops. Furthermore, if you find your session usage percentage to be hovering above 80%, it could be time to either modify HAProxy’s configuration to allow more sessions, or migrate your HAProxy server to a bigger box.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: Frontend {#PXNAME} Errors and denials per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.ereq.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.dreq.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy: Frontend {#PXNAME} In/Out traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.bin[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.bout[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy: Frontend {#PXNAME} Requests and sessions per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.req_rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy: Frontend {#PXNAME} Responses by HTTP code</name>
                            <type>STACKED</type>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.hrsp_1xx.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.hrsp_2xx.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.hrsp_3xx.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>A54F10</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.hrsp_4xx.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <color>FC6EA3</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend.hrsp_5xx.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>TCP FRONTEND discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.frontend_tcp.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>FRONTEND</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>tcp</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery TCP frontends</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Incoming traffic</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.bin[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <description>Number of bits received by the frontend</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bin.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Outgoing traffic</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.bout[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <description>Number of bits sent by the frontend</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bout.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Denied requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.dreq.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Requests denied due to security concerns (ACL-restricted) per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dreq.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_DREQ.MAX.WARN}</expression>
                                    <name>HAProxy TCP Frontend {#PXNAME}: Number of requests denied is more than {$HAPROXY.FRONT_DREQ.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests denied due to security concerns (ACL-restricted) is more than {$HAPROXY.FRONT_DREQ.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Request errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.ereq.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of request errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].ereq.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_EREQ.MAX.WARN}</expression>
                                    <name>HAProxy TCP Frontend {#PXNAME}: Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Sessions rate</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of sessions created per second</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rate.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Requests rate</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.req_rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>HTTP requests per second</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].req_rate.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Established sessions</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.scur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The current number of established sessions.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].scur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Session limits</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.frontend_tcp.slim[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>The most simultaneous sessions that are allowed, as defined by the maxconn setting in the frontend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].slim.first()</params>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1h</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP Frontend {#PXNAME}: Session utilization</name>
                            <type>CALCULATED</type>
                            <key>haproxy.frontend_tcp.sutil[{#PXNAME}:{#SVNAME}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <params>last(haproxy.frontend_tcp.scur[{#PXNAME}:{#SVNAME}]) / last(haproxy.frontend_tcp.slim[{#PXNAME}:{#SVNAME}]) * 100</params>
                            <description>Percentage of sessions used (scur / slim * 100).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP Frontend {#PXNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.FRONT_SUTIL.MAX.WARN}</expression>
                                    <name>HAProxy TCP Frontend {#PXNAME}: Session utilization is more than {$HAPROXY.FRONT_SUTIL.MAX.WARN}% for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Alerting on this metric is essential to ensure your server has sufficient capacity to handle all concurrent sessions. Unlike requests, upon reaching the session limit HAProxy will deny additional clients until resource consumption drops. Furthermore, if you find your session usage percentage to be hovering above 80%, it could be time to either modify HAProxy’s configuration to allow more sessions, or migrate your HAProxy server to a bigger box.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: TCP Frontend {#PXNAME} Errors and denials per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.ereq.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.dreq.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy: TCP Frontend {#PXNAME} In/Out traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.bin[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.bout[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>HAProxy: TCP Frontend {#PXNAME} Requests and sessions per second</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.req_rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.frontend_tcp.rate[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>Servers discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.server.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>FRONTEND|BACKEND</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>http</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery servers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Responses denied per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.dresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Responses denied due to security concerns (ACL-restricted).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Errors connection per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.econ.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests that encountered an error attempting to connect to a backend server.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Response errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.eresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests whose responses yielded an error.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_ERESP.MAX.WARN}</expression>
                                    <name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with error is more than {$HAPROXY.SERVER_ERESP.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests on server, whose responses yielded an error, is more than {$HAPROXY.SERVER_ERESP.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 4xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.hrsp_4xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of HTTP client errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_4xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 5xx per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.hrsp_5xx.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of HTTP server errors per second.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_5xx.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Unassigned requests</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.qcur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Current number of requests unassigned in queue.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_QCUR.MAX.WARN}</expression>
                                    <name>HAProxy {#PXNAME} {#SVNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Time in queue</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.qtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average time spent in queue (in ms) for the last 1,024 requests.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_QTIME.MAX.WARN}</expression>
                                    <name>HAProxy {#PXNAME} {#SVNAME}: Average time spent in queue is more than {$HAPROXY.SERVER_QTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_QTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Responses time</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.rtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average server response time (in ms) for the last 1,024 requests.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_RTIME.MAX.WARN}</expression>
                                    <name>HAProxy {#PXNAME} {#SVNAME}: Average response time is more than {$HAPROXY.SERVER_RTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average server response time (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_RTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.status[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Service state</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{max(#5)}=0</expression>
                                    <name>HAProxy {#PXNAME} {#SVNAME}: Server is DOWN</name>
                                    <priority>WARNING</priority>
                                    <description>Server is not available.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Redispatched requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a request was redispatched to a different backend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy {#PXNAME} {#SVNAME}: Retried connections per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a connection was retried.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: {#PXNAME} {#SVNAME} Response time and time in queue</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.server.rtime[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.server.qtime[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
                <discovery_rule>
                    <name>TCP Servers discovery</name>
                    <type>DEPENDENT</type>
                    <key>haproxy.server_tcp.discovery</key>
                    <delay>0</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#SVNAME}</macro>
                                <value>FRONTEND|BACKEND</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#MODE}</macro>
                                <value>tcp</value>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery tcp servers</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Responses denied per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.dresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Responses denied due to security concerns (ACL-restricted).</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Errors connection per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.econ.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests that encountered an error attempting to connect to a backend server.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Response errors per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.eresp.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of requests whose responses yielded an error.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_ERESP.MAX.WARN}</expression>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}: Number of responses with error is more than {$HAPROXY.SERVER_ERESP.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Number of requests on server, whose responses yielded an error, is more than {$HAPROXY.SERVER_ERESP.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Unassigned requests</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.qcur[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Current number of requests unassigned in queue.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_QCUR.MAX.WARN}</expression>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Time in queue</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.qtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average time spent in queue (in ms) for the last 1,024 requests.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_QTIME.MAX.WARN}</expression>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}: Average time spent in queue is more than {$HAPROXY.SERVER_QTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_QTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Responses time</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.rtime[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>s</units>
                            <description>Average server response time (in ms) for the last 1,024 requests.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</params>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>0.001</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{min(5m)}&gt;{$HAPROXY.SERVER_RTIME.MAX.WARN}</expression>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}: Average response time is more than {$HAPROXY.SERVER_RTIME.MAX.WARN} for 5m</name>
                                    <priority>WARNING</priority>
                                    <description>Average server response time (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_RTIME.MAX.WARN}.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Status</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.status[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Service state</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</params>
                                </step>
                                <step>
                                    <type>BOOL_TO_DECIMAL</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>10m</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{max(#5)}=0</expression>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}: Server is DOWN</name>
                                    <priority>WARNING</priority>
                                    <description>Server is not available.</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Redispatched requests per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.wredis.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a request was redispatched to a different backend.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>HAProxy TCP {#PXNAME} {#SVNAME}: Retried connections per second</name>
                            <type>DEPENDENT</type>
                            <key>haproxy.server_tcp.wretr.rate[{#PXNAME}:{#SVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <description>Number of times a connection was retried.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>HAProxy TCP {#PXNAME} {#SVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>haproxy.get</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>HAProxy: TCP {#PXNAME} {#SVNAME} Response time and time in queue</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.server_tcp.rtime[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template App HAProxy by HTTP</host>
                                        <key>haproxy.server_tcp.qtime[{#PXNAME}:{#SVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <master_item>
                        <key>haproxy.get</key>
                    </master_item>
                    <lld_macro_paths>
                        <lld_macro_path>
                            <lld_macro>{#MODE}</lld_macro>
                            <path>$.mode</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#PXNAME}</lld_macro>
                            <path>$.pxname</path>
                        </lld_macro_path>
                        <lld_macro_path>
                            <lld_macro>{#SVNAME}</lld_macro>
                            <path>$.svname</path>
                        </lld_macro_path>
                    </lld_macro_paths>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$HAPROXY.BACK_ERESP.MAX.WARN}</macro>
                    <value>10</value>
                    <description>Maximum of responses with error on BACKEND for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.BACK_QCUR.MAX.WARN}</macro>
                    <value>10</value>
                    <description>Maximum number of requests on BACKEND unassigned in queue for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.BACK_QTIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>Maximum of average time spent in queue on BACKEND for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.BACK_RTIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>Maximum of average BACKEND response time for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.FRONT_DREQ.MAX.WARN}</macro>
                    <value>10</value>
                    <description>The HAProxy maximum denied requests for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.FRONT_EREQ.MAX.WARN}</macro>
                    <value>10</value>
                    <description>The HAProxy maximum number of request errors for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.FRONT_SUTIL.MAX.WARN}</macro>
                    <value>80%</value>
                    <description>Maximum of session usage percentage on frontend for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.PASSWORD}</macro>
                    <description>The password of the HAProxy stats page.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.RESPONSE_TIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>The HAProxy stats page maximum response time in seconds for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.SERVER_ERESP.MAX.WARN}</macro>
                    <value>10</value>
                    <description>Maximum of responses with error on server for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.SERVER_QCUR.MAX.WARN}</macro>
                    <value>10</value>
                    <description>Maximum number of requests on server unassigned in queue for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.SERVER_QTIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>Maximum of average time spent in queue on server for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.SERVER_RTIME.MAX.WARN}</macro>
                    <value>10s</value>
                    <description>Maximum of average server response time for trigger expression.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.STATS.PATH}</macro>
                    <value>stats</value>
                    <description>The path of the HAProxy stats page.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.STATS.PORT}</macro>
                    <value>8404</value>
                    <description>The port of the HAProxy stats host or container.</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.STATS.SCHEME}</macro>
                    <value>http</value>
                    <description>The scheme of HAProxy stats page(http/https).</description>
                </macro>
                <macro>
                    <macro>{$HAPROXY.USERNAME}</macro>
                    <description>The username of the HAProxy stats page.</description>
                </macro>
            </macros>
            <screens>
                <screen>
                    <name>HAProxy Backend performance</name>
                    <hsize>1</hsize>
                    <vsize>1</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: Backend {#PXNAME} Redispatched requests and retried connections per second</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
                <screen>
                    <name>HAProxy Frontend performance</name>
                    <hsize>2</hsize>
                    <vsize>2</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: Frontend {#PXNAME} Requests and sessions per second</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: Frontend {#PXNAME} Errors and denials per second</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>1</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: Frontend {#PXNAME} Responses by HTTP code</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>0</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: Frontend {#PXNAME} In/Out traffic</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>1</x>
                            <y>1</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
                <screen>
                    <name>HAProxy Server performance</name>
                    <hsize>1</hsize>
                    <vsize>1</vsize>
                    <screen_items>
                        <screen_item>
                            <resourcetype>20</resourcetype>
                            <style>0</style>
                            <resource>
                                <name>HAProxy: {#PXNAME} {#SVNAME} Response time and time in queue</name>
                                <host>Template App HAProxy by HTTP</host>
                            </resource>
                            <width>750</width>
                            <height>100</height>
                            <x>0</x>
                            <y>0</y>
                            <colspan>1</colspan>
                            <rowspan>1</rowspan>
                            <elements>25</elements>
                            <valign>0</valign>
                            <halign>0</halign>
                            <dynamic>0</dynamic>
                            <sort_triggers>0</sort_triggers>
                            <url/>
                            <application/>
                            <max_columns>3</max_columns>
                        </screen_item>
                    </screen_items>
                </screen>
            </screens>
        </template>
    </templates>
    <value_maps>
        <value_map>
            <name>Service state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Down</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Up</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
